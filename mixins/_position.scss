//*
// Set coordinate system offsets
//
// @param number|list $coords
// @param string $position The position
//
@mixin coords (
    $coords,
    $position: ''
){
    @if in-list($position, (absolute, fixed, relative)) {
        position: $position;
    }
    @include _trbl($coords);
}

//*
// Absolutely position an element and assign its coordinates
//
// @param number|list $coords
//
@mixin absolute (
    $coords: null
){
    @include coords($coords, absolute);
}

//*
// Fixed position an element and assign its coordinates
//
// @param number|list $coords
//
@mixin fixed (
    $coords: null
){
    @include coords($coords, fixed);
}

//*
// Relatively position an element and assign its coordinates
// The coordinates for a relatively positioned element should only contain one
// non-auto value on each axis to prevent over-constraining the position, which
// may produce unexpected results.
// Passing a single value will define both `top` and `left` values.`
// Passing two values will define the `top` and `left` values respectively.
// Passing more than two values will rely on the default coordinate system.
//
// @link http://www.w3.org/TR/CSS21/visuren.html#relative-positioning
//
// @param number|list $coords A list (top, left) or a number whiche defines
//   both values
//
@mixin relative (
    $coords: null
){
    $len: length($coords);
    
    @if $len == 1 {
        $coords: $coords $coords;
    }

    @if $len <= 2 {
        $coords: nth($coords, 1) null null nth($coords, 2);
    }

    @include coords($coords, relative);
}

//*
// Stretch an element over its positioning parent
//
// @param number|list $coords
//
@mixin stretch (
    $coords: 0
){
    @include absolute($coords);
}