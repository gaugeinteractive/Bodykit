////
/// @group Mixins
/// @author Joey Hoer
////

///
/// Give an element a fixed aspect ratio.
///
/// NOTE: Direct descendans will overflow the container and, thus, be hidden.
/// It is recomended the there only be one direct descendant which is "stretched"
/// over the container, allowing grandchildren to be positioned as normal. This
/// is the default behavior.
///
/// @param {Number} $ratio - The ratio of width to height.
///    Photos and videos usually come in 4/3 or 16/9 ratios.
/// @param {String} $element [:after] - The element to use to create
///    the aspect ratio.
/// @param {Bool} $stretch [true] - If `true`, direct descendants will be
///    stretched over the container
/// @param {Bool} $overwrite [false] - If `true`, only the bottom padding
///    of the element will be printed. Used to overwrite an existing aspect ratio
///    in responsive layouts
///
@mixin aspect-ratio(
    $ratio,
    $element: ":after",
    $stretch: true,
    $overwrite: false
){
    @if not $overwrite {
        position: relative;
        overflow: hidden;

        &#{$element} {
            content: '';
            display: block;
            height: 0;
            padding-bottom: percentage(1 / $ratio);
        }

        @if $stretch {
            & > * {
                @include absolute(0);
            }
        }
    }
    @else {
        &#{$element} {
            padding-bottom: percentage(1 / $ratio);
        }
    }
}
